# SYNTAX TEST "Packages/sbnf/sbnf.sublime-syntax"

 [PARAM1, PARAM2]
#^^^^^^^^^^^^^^^^ meta.function.parameters.sbnf
#^ punctuation.section.parameters.begin.sbnf
# ^^^^^^ variable.parameter.sbnf
#       ^^^^^^^^ meta.function.parameters.sbnf
#       ^ punctuation.separator.parameters.sbnf
#         ^^^^^^ variable.parameter.sbnf
#               ^ punctuation.section.parameters.end.sbnf

 [param1]
#^ meta.function.parameters.sbnf punctuation.section.parameters.begin.sbnf
# ^ invalid.illegal.sbnf
#  ^^^^^ entity.name.function.sbnf
#       ^ invalid.illegal.sbnf

 HEADER = `value`
#^^^^^^ entity.name.variable.sbnf
#       ^ keyword.operator.assignment.sbnf
#         ^^^^^^^ string.quoted.other.sbnf
#         ^ punctuation.definition.string.begin.sbnf
#               ^ punctuation.definition.string.end.sbnf

EXTENSIONS = `ext`
#^^^^^^^^^ storage.type.sbnf
#          ^ keyword.operator.assignment.sbnf
#            ^^^^^ string.quoted.other.sbnf
#            ^ punctuation.definition.string.begin.sbnf
#                ^ punctuation.definition.string.end.sbnf

 literal : `a` ;
#^^^^^^^ entity.name.function.sbnf
#        ^ keyword.operator.assignment.sbnf
#              ^ punctuation.terminator.rule.sbnf

 regex : 'a.' ;
#^^^^^ entity.name.function.sbnf
#      ^ keyword.operator.assignment.sbnf
#        ^ punctuation.definition.string.begin.sbnf
#        ^^^^ string.quoted.single.sbnf
#         ^^ source.regexp
#          ^ keyword.other.any.regexp
#           ^ punctuation.definition.string.end.sbnf
#             ^ punctuation.terminator.rule.sbnf

 rule[A, `b`]: '#[A], b';
#^^^^ meta.function.sbnf entity.name.function.sbnf
#    ^ punctuation.section.parameters.begin.sbnf
#     ^ variable.parameter.sbnf
#      ^ punctuation.separator.parameters.sbnf
#       ^^^^ variable.parameter.sbnf
#        ^^^ string.quoted.other.sbnf
#           ^ punctuation.section.parameters.end.sbnf
#            ^ keyword.operator.assignment.sbnf
#              ^^^^^^^^^ string.quoted.single.sbnf
#               ^^ punctuation.definition.placeholder.begin.sbnf
#                 ^ variable.other.placeholder.sbnf
#                  ^ punctuation.definition.placeholder.end.sbnf
#                       ^ punctuation.terminator.rule.sbnf

 CLAUSE[a, B] = foo[a, B, `c`, 'd']
#^^^^^^ entity.name.variable.sbnf
#      ^ punctuation.section.parameters.begin.sbnf
#       ^ variable.parameter.sbnf
#        ^ punctuation.separator.parameters.sbnf
#         ^^ variable.parameter.sbnf
#           ^ punctuation.section.parameters.end.sbnf
#             ^ keyword.operator.assignment.sbnf
#               ^^^ meta.function-call.sbnf variable.function.sbnf
#                  ^ meta.function-call.sbnf punctuation.section.arguments.begin.sbnf
#                  ^^^^^^^^^^^^^^^^ meta.function-call.sbnf
#                      ^ meta.function-call.sbnf constant.other.sbnf

 rule = 'jdf'
#^^^^ meta.function.sbnf entity.name.function.sbnf
#     ^ invalid.illegal.sbnf
#       ^ invalid.illegal.sbnf
#           ^ invalid.illegal.sbnf

 UPPER : '[A-Z]+'
#^^^^ entity.name.variable.sbnf
#      ^ invalid.illegal.sbnf
#        ^ invalid.illegal.sbnf
